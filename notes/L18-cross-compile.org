#+TITLE: CIS198 Lecture 18: 交叉编译
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2024-04-21 Sun>
#+STARTUP: overview num indent
#+OPTIONS: ^:nil

* 编译工具配置 macOS to windows
#+BEGIN_SRC sh :results output
  rustup target list | grep x86_64
#+END_SRC

#+RESULTS:
#+begin_example
x86_64-apple-darwin (installed)
x86_64-apple-ios
x86_64-fortanix-unknown-sgx
x86_64-linux-android
x86_64-pc-solaris
x86_64-pc-windows-gnu (installed)
x86_64-pc-windows-msvc
x86_64-unknown-freebsd
x86_64-unknown-fuchsia
x86_64-unknown-illumos
x86_64-unknown-linux-gnu (installed)
x86_64-unknown-linux-gnux32
x86_64-unknown-linux-musl (installed)
x86_64-unknown-netbsd
x86_64-unknown-none
x86_64-unknown-redox
x86_64-unknown-uefi
#+end_example

安装 rust 交叉编译工具链
#+BEGIN_SRC sh
  rustup target add x86_64-pc-windows-gnu
#+END_SRC

安装 mingw-w64 编译工具
#+BEGIN_SRC sh
  brew install mingw-w64
#+END_SRC

添加 cargo 的全局配置文件 =~/.cargo/config=
#+BEGIN_SRC conf
  [target.x86_64-pc-windows-gnu]
  linker = "x86_64-w64-mingw32-gcc"
  ar = "x86_64-w64-mingw32-gcc-ar"
#+END_SRC

* 交叉编译
#+BEGIN_SRC sh
  cargo build --target x86_64-pc-windows-gnu
#+END_SRC

* 链接
1. 说明文档 | [[https://github.com/japaric/rust-cross][link]]
