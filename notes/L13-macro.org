#+TITLE: CIS198 Lecture 13: 宏
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2024-04-13 Sat>
#+STARTUP: overview num indent
#+OPTIONS: ^:nil

* 语法扩展
1. ~#[foo]~ 和 ~#![foo]~ 属性
2. ~foo! arg~ 宏
   - ~foo!(...)~
   - ~foo![...]~
   - ~foo!{...}~
3. ~foo! arg1 arg2~
   - ~macro_rules! name {...}~ 定义宏

* 定义宏
#+BEGIN_SRC rust :exports both
  macro_rules! incr {
      ($x:ident) => {
          $x += 1;
      };
  }

  fn main() {
      let mut x = 0;

      incr!(x); // x += 1;

      println!("x = {x}");
  }
#+END_SRC

#+RESULTS:
: x = 1

* AST
#+BEGIN_SRC rust :exports both
  macro_rules! four {
      () => { 1 + 3 };
  }

  println!("ans = {:?}", four!());
#+END_SRC

#+RESULTS:
: ans = 4

* 宏
** 捕获
#+BEGIN_SRC rust :exports both
  macro_rules! twice {
      ( $e:expr ) => { { $e; $e } }
  }

  fn foo() { println!("foo"); }

  twice!(foo()); // => {foo(); foo()}
#+END_SRC

#+RESULTS:
: foo
: foo

** 重复
1. 重复用来重复模式
2. 形式 ~$ (...) sep rep~
   - ~$~ 开头
   - ~(...)~ 重复执行的模式串
   - sep 分割符，例如： ~,~ 和 ~;~
   - rep 重复的次数
     + ~*~ 零或多次
     + ~+~ 一或多次
#+BEGIN_SRC rust :exports both
  macro_rules! myvec {
      ( $( $elem:expr ) , * ) => {
          {
              let mut v = Vec::new();
              $( v.push($elem); )*
              v
          }
      }
  }

  println!("ans = {:?}", myvec![3, 4]);
#+END_SRC

#+RESULTS:
: ans = [3, 4]
