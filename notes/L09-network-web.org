#+TITLE: CIS198 Lecture 9: 网络编程
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2024-04-08 Mon>
#+STARTUP: overview num indent
#+OPTIONS: ^:nil


* 网络
** socket
udp server
#+BEGIN_SRC rust :exports both
  use std::net::UdpSocket;

  fn main() -> std::io::Result<()> {
      // 绑定端口 12345
      let socket = UdpSocket::bind("127.0.0.1:12345")?;

      loop {
          // 读取 socket 中的数据
          let mut buf = [0; 1024];
          let (amt, src) = socket.recv_from(&mut buf)?;

          // 将输入逆序
          let buf = &mut buf[..amt];
          buf.reverse();
          socket.send_to(buf, &src)?;
      }
  }
#+END_SRC

udp client
#+BEGIN_SRC rust :exports both
  use std::net::UdpSocket;
  use std::{io, str};

  fn main() -> std::io::Result<()> {
      // 绑定端口
      let socket = UdpSocket::bind("127.0.0.1:11111")?;

      // 建立链接
      socket.connect("127.0.0.1:12345")?;

      loop {
          // 读取输入数据
          let mut input = String::new();
          io::stdin().read_line(&mut input)?;
          socket.send(input.trim().as_bytes())?;

          // 发送数据，并接收结果
          let mut buffer = [0u8; 1500];
          socket.recv_from(&mut buffer)?;

          // 打印输出结果
          println!(
              "RECV: {}",
              str::from_utf8(&buffer).expect("failed to write")
          );
      }
  }
#+END_SRC
